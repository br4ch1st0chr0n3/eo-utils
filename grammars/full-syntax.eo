# The purpose of this test case is to make
# sure all possible syntax scenarios can
# be parsed by the ANTLR

+alias Test Test
+alias org.example.foo
+foo
+bar Some text

500.43.@ > one

# This is just a simple string
"Hello, друг!" > hello!

[tt a...] > atom /int

# This is very good object
[x] > first
  x > @
  second > hello
    $.add.@ 5.< > i
    third:foo > x...!
      f 12 false
        (((((t' 22) r):t 8.54 "yes").< 'e').print 88 0x1f):hey TRUE.< FALSE > a!
          # This object is also very good
          []
            Q.x.f.d Q Q
            &.@.< > t
            ^.@.hey > you...
            Q
          ...kid.^.^
          '家'
    f':u
      z'
        z 5
          ...z
  oops

[] > obj
  "some" > @
  [] > foo
    ^.@ > @

# Comments are allowed only in front of top-level objects
[]
  one.two.three.four.five
    t.<
  .two "hello!"
  .three > a1
  .four (a b c') > a2
  .five > a3

test
  me
    now:i (f (f (f (f 1)))).f

[] > ooo
  # This is one
  [] > o-1 /?

# This is two
[] > o2

-2.4E3 > x

[x] (x.add 1 > succ) (x.sub 1 > prev)

7.33e-10 > y

a a a a.a > x

a a (a):t a:t > a

a > a
  (a)

a
  a:a
  a:a

a a.a > a

[a @] > a

a > a:t

t [a] (a a) > a

t (a:a)

[x y] > diff
  x.minus y > @

diff > a
  4:y
  5

a. t. b d > a

a. t.b d > a

[x] (a > a)

a. > t1
  a
.a > t2

a > b:x > c

a [] b > c c

((a > a) > a) > a

a (a > a) > a

a > a
  (a)
  a:a
  a > a

/[a-z]+.+/m > c
