-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from Eo/Par.y
-----------------------------------------------------------------------------


rule 5 is unused
rule 6 is unused
rule 7 is unused
rule 8 is unused
rule 9 is unused
rule 10 is unused
rule 11 is unused
rule 12 is unused
rule 13 is unused
rule 14 is unused
rule 15 is unused
rule 16 is unused
rule 17 is unused
rule 18 is unused
rule 20 is unused
rule 21 is unused
rule 22 is unused
rule 23 is unused
rule 24 is unused
rule 25 is unused
rule 26 is unused
rule 27 is unused

terminal L_STAR is unused
terminal L_DOTS is unused
terminal L_CONST is unused
terminal L_SLASH is unused
terminal L_COLON is unused
terminal L_COPY is unused
terminal L_ARROW is unused
terminal L_VERTEX is unused
terminal L_SIGMA is unused
terminal L_XI is unused
terminal L_PLUS is unused
terminal L_MINUS is unused
terminal L_QUESTION is unused
terminal L_DOT is unused
terminal L_LSQ is unused
terminal L_RSQ is unused
terminal L_LB is unused
terminal L_RB is unused
terminal L_AT is unused
terminal L_RHO is unused
terminal L_HASH is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pINDENT -> INDENT                           (0)
	%start_pINDENT_STAR -> INDENT_STAR                 (1)
	%start_pListINDENT_STAR -> ListINDENT_STAR         (2)
	%start_pMAYBE_LINEBREAK -> MAYBE_LINEBREAK         (3)
	%start_pEOL -> EOL                                 (4)
	ROOT -> L_ROOT                                     (5)
	STAR -> L_STAR                                     (6)
	DOTS -> L_DOTS                                     (7)
	CONST -> L_CONST                                   (8)
	SLASH -> L_SLASH                                   (9)
	COLON -> L_COLON                                   (10)
	COPY -> L_COPY                                     (11)
	ARROW -> L_ARROW                                   (12)
	VERTEX -> L_VERTEX                                 (13)
	SIGMA -> L_SIGMA                                   (14)
	XI -> L_XI                                         (15)
	PLUS -> L_PLUS                                     (16)
	MINUS -> L_MINUS                                   (17)
	QUESTION -> L_QUESTION                             (18)
	SPACE -> L_SPACE                                   (19)
	DOT -> L_DOT                                       (20)
	LSQ -> L_LSQ                                       (21)
	RSQ -> L_RSQ                                       (22)
	LB -> L_LB                                         (23)
	RB -> L_RB                                         (24)
	AT -> L_AT                                         (25)
	RHO -> L_RHO                                       (26)
	HASH -> L_HASH                                     (27)
	LINEBREAK -> L_LINEBREAK                           (28)
	INDENT -> SPACE SPACE                              (29)
	INDENT_STAR -> INDENT                              (30)
	ListINDENT_STAR ->                                 (31)
	ListINDENT_STAR -> INDENT_STAR ListINDENT_STAR     (32)
	MAYBE_LINEBREAK -> LINEBREAK                       (33)
	MAYBE_LINEBREAK ->                                 (34)
	EOL -> LINEBREAK MAYBE_LINEBREAK ListINDENT_STAR   (35)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	L_ROOT         { PT _ (T_ROOT $$) }
	L_STAR         { PT _ (T_STAR $$) }
	L_DOTS         { PT _ (T_DOTS $$) }
	L_CONST        { PT _ (T_CONST $$) }
	L_SLASH        { PT _ (T_SLASH $$) }
	L_COLON        { PT _ (T_COLON $$) }
	L_COPY         { PT _ (T_COPY $$) }
	L_ARROW        { PT _ (T_ARROW $$) }
	L_VERTEX       { PT _ (T_VERTEX $$) }
	L_SIGMA        { PT _ (T_SIGMA $$) }
	L_XI           { PT _ (T_XI $$) }
	L_PLUS         { PT _ (T_PLUS $$) }
	L_MINUS        { PT _ (T_MINUS $$) }
	L_QUESTION     { PT _ (T_QUESTION $$) }
	L_SPACE        { PT _ (T_SPACE $$) }
	L_DOT          { PT _ (T_DOT $$) }
	L_LSQ          { PT _ (T_LSQ $$) }
	L_RSQ          { PT _ (T_RSQ $$) }
	L_LB           { PT _ (T_LB $$) }
	L_RB           { PT _ (T_RB $$) }
	L_AT           { PT _ (T_AT $$) }
	L_RHO          { PT _ (T_RHO $$) }
	L_HASH         { PT _ (T_HASH $$) }
	L_LINEBREAK    { PT _ (T_LINEBREAK $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pINDENT  rule  0
	%start_pINDENT_STAR rule  1
	%start_pListINDENT_STAR rule  2
	%start_pMAYBE_LINEBREAK rule  3
	%start_pEOL     rule  4
	ROOT            rule  5
	STAR            rule  6
	DOTS            rule  7
	CONST           rule  8
	SLASH           rule  9
	COLON           rule  10
	COPY            rule  11
	ARROW           rule  12
	VERTEX          rule  13
	SIGMA           rule  14
	XI              rule  15
	PLUS            rule  16
	MINUS           rule  17
	QUESTION        rule  18
	SPACE           rule  19
	DOT             rule  20
	LSQ             rule  21
	RSQ             rule  22
	LB              rule  23
	RB              rule  24
	AT              rule  25
	RHO             rule  26
	HASH            rule  27
	LINEBREAK       rule  28
	INDENT          rule  29
	INDENT_STAR     rule  30
	ListINDENT_STAR rules 31, 32
	MAYBE_LINEBREAK rules 33, 34
	EOL             rule  35

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_SPACE        shift, and enter state 16

	SPACE          goto state 12
	INDENT         goto state 18

State 1


	L_SPACE        shift, and enter state 16

	SPACE          goto state 12
	INDENT         goto state 13
	INDENT_STAR    goto state 17

State 2


	L_SPACE        shift, and enter state 16
	%eof           reduce using rule 31

	SPACE          goto state 12
	INDENT         goto state 13
	INDENT_STAR    goto state 14
	ListINDENT_STARgoto state 15

State 3


	L_LINEBREAK    shift, and enter state 9
	%eof           reduce using rule 34

	LINEBREAK      goto state 10
	MAYBE_LINEBREAKgoto state 11

State 4


	L_LINEBREAK    shift, and enter state 9

	LINEBREAK      goto state 7
	EOL            goto state 8

State 5


	L_ROOT         shift, and enter state 6


State 6

	ROOT -> L_ROOT .                                    (rule 5)



State 7

	EOL -> LINEBREAK . MAYBE_LINEBREAK ListINDENT_STAR    (rule 35)

	L_SPACE        reduce using rule 34
	L_LINEBREAK    shift, and enter state 9
	%eof           reduce using rule 34

	LINEBREAK      goto state 10
	MAYBE_LINEBREAKgoto state 21

State 8

	%start_pEOL -> EOL .                                (rule 4)

	%eof           accept


State 9

	LINEBREAK -> L_LINEBREAK .                          (rule 28)

	L_SPACE        reduce using rule 28
	L_LINEBREAK    reduce using rule 28
	%eof           reduce using rule 28


State 10

	MAYBE_LINEBREAK -> LINEBREAK .                      (rule 33)

	L_SPACE        reduce using rule 33
	%eof           reduce using rule 33


State 11

	%start_pMAYBE_LINEBREAK -> MAYBE_LINEBREAK .        (rule 3)

	%eof           accept


State 12

	INDENT -> SPACE . SPACE                             (rule 29)

	L_SPACE        shift, and enter state 16

	SPACE          goto state 20

State 13

	INDENT_STAR -> INDENT .                             (rule 30)

	L_SPACE        reduce using rule 30
	%eof           reduce using rule 30


State 14

	ListINDENT_STAR -> INDENT_STAR . ListINDENT_STAR    (rule 32)

	L_SPACE        shift, and enter state 16
	%eof           reduce using rule 31

	SPACE          goto state 12
	INDENT         goto state 13
	INDENT_STAR    goto state 14
	ListINDENT_STARgoto state 19

State 15

	%start_pListINDENT_STAR -> ListINDENT_STAR .        (rule 2)

	%eof           accept


State 16

	SPACE -> L_SPACE .                                  (rule 19)

	L_SPACE        reduce using rule 19
	%eof           reduce using rule 19


State 17

	%start_pINDENT_STAR -> INDENT_STAR .                (rule 1)

	%eof           accept


State 18

	%start_pINDENT -> INDENT .                          (rule 0)

	%eof           accept


State 19

	ListINDENT_STAR -> INDENT_STAR ListINDENT_STAR .    (rule 32)

	%eof           reduce using rule 32


State 20

	INDENT -> SPACE SPACE .                             (rule 29)

	L_SPACE        reduce using rule 29
	%eof           reduce using rule 29


State 21

	EOL -> LINEBREAK MAYBE_LINEBREAK . ListINDENT_STAR    (rule 35)

	L_SPACE        shift, and enter state 16
	%eof           reduce using rule 31

	SPACE          goto state 12
	INDENT         goto state 13
	INDENT_STAR    goto state 14
	ListINDENT_STARgoto state 22

State 22

	EOL -> LINEBREAK MAYBE_LINEBREAK ListINDENT_STAR .    (rule 35)

	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 36
Number of terminals: 24
Number of non-terminals: 34
Number of states: 23
