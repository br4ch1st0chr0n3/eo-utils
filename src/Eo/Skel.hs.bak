-- File generated by the BNF Converter (bnfc 2.9.4).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Eo.Skel where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified Eo.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transROOT :: Eo.Abs.ROOT -> Result
transROOT x = case x of
  Eo.Abs.ROOT string -> failure x

transSTAR :: Eo.Abs.STAR -> Result
transSTAR x = case x of
  Eo.Abs.STAR string -> failure x

transDOTS :: Eo.Abs.DOTS -> Result
transDOTS x = case x of
  Eo.Abs.DOTS string -> failure x

transCONST :: Eo.Abs.CONST -> Result
transCONST x = case x of
  Eo.Abs.CONST string -> failure x

transSLASH :: Eo.Abs.SLASH -> Result
transSLASH x = case x of
  Eo.Abs.SLASH string -> failure x

transCOLON :: Eo.Abs.COLON -> Result
transCOLON x = case x of
  Eo.Abs.COLON string -> failure x

transCOPY :: Eo.Abs.COPY -> Result
transCOPY x = case x of
  Eo.Abs.COPY string -> failure x

transARROW :: Eo.Abs.ARROW -> Result
transARROW x = case x of
  Eo.Abs.ARROW string -> failure x

transVERTEX :: Eo.Abs.VERTEX -> Result
transVERTEX x = case x of
  Eo.Abs.VERTEX string -> failure x

transSIGMA :: Eo.Abs.SIGMA -> Result
transSIGMA x = case x of
  Eo.Abs.SIGMA string -> failure x

transXI :: Eo.Abs.XI -> Result
transXI x = case x of
  Eo.Abs.XI string -> failure x

transPLUS :: Eo.Abs.PLUS -> Result
transPLUS x = case x of
  Eo.Abs.PLUS string -> failure x

transMINUS :: Eo.Abs.MINUS -> Result
transMINUS x = case x of
  Eo.Abs.MINUS string -> failure x

transQUESTION :: Eo.Abs.QUESTION -> Result
transQUESTION x = case x of
  Eo.Abs.QUESTION string -> failure x

transSPACE :: Eo.Abs.SPACE -> Result
transSPACE x = case x of
  Eo.Abs.SPACE string -> failure x

transDOT :: Eo.Abs.DOT -> Result
transDOT x = case x of
  Eo.Abs.DOT string -> failure x

transLSQ :: Eo.Abs.LSQ -> Result
transLSQ x = case x of
  Eo.Abs.LSQ string -> failure x

transRSQ :: Eo.Abs.RSQ -> Result
transRSQ x = case x of
  Eo.Abs.RSQ string -> failure x

transLB :: Eo.Abs.LB -> Result
transLB x = case x of
  Eo.Abs.LB string -> failure x

transRB :: Eo.Abs.RB -> Result
transRB x = case x of
  Eo.Abs.RB string -> failure x

transAT :: Eo.Abs.AT -> Result
transAT x = case x of
  Eo.Abs.AT string -> failure x

transRHO :: Eo.Abs.RHO -> Result
transRHO x = case x of
  Eo.Abs.RHO string -> failure x

transHASH :: Eo.Abs.HASH -> Result
transHASH x = case x of
  Eo.Abs.HASH string -> failure x

transLINEBREAK :: Eo.Abs.LINEBREAK -> Result
transLINEBREAK x = case x of
  Eo.Abs.LINEBREAK string -> failure x

transINDENT :: Eo.Abs.INDENT -> Result
transINDENT x = case x of
  Eo.Abs.EINDENT space1 space2 -> failure x

transINDENT_STAR :: Eo.Abs.INDENT_STAR -> Result
transINDENT_STAR x = case x of
  Eo.Abs.EINDENT_STAR indent -> failure x

transLINEBREAKA :: Eo.Abs.LINEBREAKA -> Result
transLINEBREAKA x = case x of
  Eo.Abs.LINEBREAKALINEBREAK linebreak -> failure x
  Eo.Abs.LINEBREAKA_ -> failure x

transEOL :: Eo.Abs.EOL -> Result
transEOL x = case x of
  Eo.Abs.EEOL linebreak linebreaka indentstars -> failure x
