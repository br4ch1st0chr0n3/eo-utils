The Language eo
BNF Converter


%Process by txt2tags to generate html or latex



This document was automatically generated by the //BNF-Converter//. It was generated together with the lexer, the parser, and the abstract syntax module, which guarantees that the document matches with the implementation of the language (provided no hand-hacking has taken place).

==The lexical structure of eo==

===Literals===

























ROOT literals are recognized by the regular expression
`````'Q'`````

STAR literals are recognized by the regular expression
`````'*'`````

DOTS literals are recognized by the regular expression
`````{"..."}`````

CONST literals are recognized by the regular expression
`````'!'`````

SLASH literals are recognized by the regular expression
`````'/'`````

COLON literals are recognized by the regular expression
`````':'`````

COPY literals are recognized by the regular expression
`````'''`````

ARROW literals are recognized by the regular expression
`````'>'`````

VERTEX literals are recognized by the regular expression
`````'<'`````

SIGMA literals are recognized by the regular expression
`````'&'`````

XI literals are recognized by the regular expression
`````'$'`````

PLUS literals are recognized by the regular expression
`````'+'`````

MINUS literals are recognized by the regular expression
`````'-'`````

QUESTION literals are recognized by the regular expression
`````'?'`````

SPACE literals are recognized by the regular expression
`````' '`````

DOT literals are recognized by the regular expression
`````'.'`````

LSQ literals are recognized by the regular expression
`````'['`````

RSQ literals are recognized by the regular expression
`````']'`````

LB literals are recognized by the regular expression
`````'('`````

RB literals are recognized by the regular expression
`````')'`````

AT literals are recognized by the regular expression
`````'@'`````

RHO literals are recognized by the regular expression
`````'^'`````

HASH literals are recognized by the regular expression
`````'#'`````

LINEBREAK literals are recognized by the regular expression
`````'
' | {"
"}`````


===Reserved words and symbols===
The set of reserved words is the set of terminals appearing in the grammar. Those reserved words that consist of non-letter characters are called symbols, and they are treated in a different way from those that are similar to identifiers. The lexer follows rules familiar from languages like Haskell, C, and Java, including longest match and spacing conventions.

The reserved words used in eo are the following:

There are no reserved words in eo.


There are no symbols in eo.

===Comments===
There are no single-line comments in the grammar.There are no multiple-line comments in the grammar.

==The syntactic structure of eo==
Non-terminals are enclosed between < and >.
The symbols -> (production),  **|**  (union)
and **eps** (empty rule) belong to the BNF notation.
All other symbols are terminals.

  | //INDENT// | -> | //SPACE// //SPACE//
  | //INDENT_STAR// | -> | //INDENT//
  | //[INDENT_STAR]// | -> | **eps**
  |  |  **|**  | //INDENT_STAR// //[INDENT_STAR]//
  | //LINEBREAKA// | -> | //LINEBREAK//
  |  |  **|**  | **eps**
  | //EOL// | -> | //LINEBREAK// //LINEBREAKA// //[INDENT_STAR]//



%% File generated by the BNF Converter (bnfc 2.9.4).
